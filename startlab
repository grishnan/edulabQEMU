#!/bin/bash
# Author: grishnan https://github.com/grishnan
# E-mail: grishnan@gmail.com
# License: GNU GENERAL PUBLIC LICENSE Version 3

mdir=.machines # machines directory
switch=br0     # bridge name

if ! ip -br -f link -c a | awk '{ print $1 }' | grep $switch > /dev/null 2>&1; then
  ip link add $switch type bridge
fi
ip link set $switch up

function genmac {
  echo "$(printf '00:60:2F:%02X:%02X:%02X\n' $[RANDOM%256] $[RANDOM%256] $[RANDOM%256])"
}

function startmachine {
  qemu-system-x86_64 -name $1 -enable-kvm -machine q35,kernel_irqchip=on,vmport=off \
                     -cpu host -smp cores=$2 -boot order=c -drive file=$mdir/$4/$1.qcow2,format=qcow2 -m size=$3M $5 $6 \
                     -device e1000,netdev=lan0,mac=$(genmac) -netdev tap,id=lan0,script=./qemu-ifup,downscript=./qemu-ifdown -sdl -display sdl&
}

function check_vm {
  # check whether snapshots of VMs exist in directory $1 and if not, create their
  for vm in $(ls ./$mdir/$1/.base/)
  do
    if ! test -f ./$mdir/$1/$vm.qcow2; then
      cd ./$mdir/$1/
      qemu-img create -f qcow2 -b .base/$vm $vm.qcow2 > /dev/null 2>&1
      cd ../../
    fi
  done
}

function startmachines {
  check_vm $1
  if [ $# -eq 4 ]; then
    # startmachine <machine name> <cores> <memory in MB> <dir>
    startmachine RTR   1 $2 $1 "-device e1000,netdev=wan0,mac=$(genmac) -netdev user,id=wan0"
    startmachine SRV   2 $3 $1 "-hdc $mdir/hd/hd1.qcow2 -hdd $mdir/hd/hd2.qcow2"
    startmachine CLI-C 1 $4 $1
  elif [ $# -eq 5 ]; then
    startmachine RTR   1 $2 $1 "-device e1000,netdev=wan0,mac=$(genmac) -netdev user,id=wan0"
    startmachine SRV   4 $3 $1 "-hdc $mdir/hd/hd1.qcow2 -hdd $mdir/hd/hd2.qcow2"
    startmachine CLI-C 1 $4 $1
    startmachine CLI-P 1 $5 $1
  elif [ $# -eq 6 ]; then
    startmachine RTR   1 $2 $1 "-device e1000,netdev=wan0,mac=$(genmac) -netdev user,id=wan0"
    startmachine SRV1  2 $3 $1
    startmachine SRV2  2 $4 $1
    startmachine CLI-C 1 $5 $1
    startmachine CLI-P 1 $6 $1
  fi
}

# create hard disk drives if they don't exist
if ! test -f ./$mdir/hd/hd1.qcow2; then
  qemu-img create -f qcow2 ./$mdir/hd/hd1.qcow2 2G > /dev/null 2>&1
fi
if ! test -f ./$mdir/hd/hd2.qcow2; then
  qemu-img create -f qcow2 ./$mdir/hd/hd2.qcow2 2G > /dev/null 2>&1
fi

case $1 in
   1) startmachines  1 80 200 200 200  ;; # startmachines <dir> <mem RTR> <mem SRV> <mem CLI-C> <mem CLI-P>
   2) startmachines  2 80 200 200      ;; # startmachines <dir> <mem RTR> <mem SRV> <mem CLI-C>
   3) startmachines  3 80 2000 768 768 ;;
   4) startmachines  4 80 2000 768     ;;
   5) startmachines  5 80 512 768 768  ;;
   6) startmachines  6 80 512 1000     ;;
   7) startmachines  7 80 200 200 512  ;;
   8) startmachines  8 80 1500 512     ;;
   9) startmachines  9 80 1024 512 512 ;;
  10) startmachines 10 80 3096 3096 1024 1024 ;; # startmachines <dir> <mem RTR> <mem SRV1> <mem SRV2> <mem CLI-C> <mem CLI-P>
esac
